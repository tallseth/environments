[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[user]
	name = Seth McCarthy
	email = seth.mccarthy@olo.com
[diff]
	algorithm = patience
	tool = p4merge
	guitool = p4merge
[difftool "p4merge"]
	path = C:/Program Files/Perforce/p4merge.exe
[merge]
	tool = p4merge
[mergetool "p4merge"]
	path = C:/Program Files/Perforce/p4merge.exe
[difftool]
	prompt = false
[alias]
	l = log -n 20 --abbrev-commit --pretty=format:'%C(bold blue)%h%Creset %C(bold yellow)%d%Creset %s %Cgreen(%cr)<%an>%Creset'
	amend = commit --amend
	branches = branch -avv
	bclean = "!f() { git branch --merged ${1-develop} | grep -v \\* | grep -v master$ | grep -v ${1-develop}$ | xargs -r git branch -d; }; f"
	c = clone --recursive
	ca = !git add -A && git commit -av
	co = checkout
	d = diff --patch-with-stat
	fetch-pr = "!f() { git fetch -fu $1 refs/pull/$2/head:pull-$2; }; f"
	go = checkout -B
	puff = pull --ff-only --recurse-submodules --prune
	remotes = remote -v
	s = status -s
	sh = show --abbrev-commit --pretty=format:'%C(bold blue)%h%Creset %C(bold yellow)%d%Creset %s %Cgreen(%cr)<%an>%Creset'
	tags = tag -l
	plat = "!f() { B=$(git branch --list \"*-PLAT-$1\");C=$(grep -c . <<<\"$B\"); if (( $C == 1 )); then git checkout $B; else echo \"$C branches found for PLAT-$1\"; fi; }; f"
	sad = "!f() { git add . && git stash && git stash drop; }; f"
[rebase]
	autostash = true
[core]
	editor = 'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin
	autocrlf = true
